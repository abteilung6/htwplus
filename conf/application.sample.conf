# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="=0m=0dGa_][qYXTHHbIBJqWfe;SFj5zkvoPW`kzz8n]7`z;aO>:BRj`G1`00;ROF"

play.modules.enabled += "modules.StartupModul"
play.http.errorHandler = "services.ErrorHandler"

# The application languages
# ~~~~~
play.i18n.langs=["de"]

akka.jvm-exit-on-fatal-error = false

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/awesome"
db.default.username=play
db.default.password=withme

# Set a connection's default autocommit setting
db.default.autocommit=true

# Set a connection's default isolation level
db.default.isolation=READ_COMMITTED

# In order to reduce lock contention and thus improve performance, 
# each incoming connection request picks off a connection from a 
# pool that has thread-affinity. 
# The higher this number, the better your performance will be for the 
# case when you have plenty of short-lived threads. 
# Beyond a certain threshold, maintenance of these pools will start 
# to have a negative effect on performance (and only for the case 
# when connections on a partition start running out).
db.default.partitionCount=2

# The number of connections to create per partition. Setting this to 
# 5 with 3 partitions means you will have 15 unique connections to the 
# database. Note that BoneCP will not create all these connections in 
# one go but rather start off with minConnectionsPerPartition and 
# gradually increase connections as required.
db.default.maxConnectionsPerPartition=5

# The number of initial connections, per partition.
db.default.minConnectionsPerPartition=5

# When the available connections are about to run out, BoneCP will 
# dynamically create new ones in batches. This property controls 
# how many new connections to create in one go (up to a maximum of 
# maxConnectionsPerPartition). Note: This is a per-partition setting.
db.default.acquireIncrement=1

# After attempting to acquire a connection and failing, try to 
# connect this number of times before giving up.
db.default.acquireRetryAttempts=10

# How long to wait before attempting to obtain a 
# connection again after a failure.
db.default.acquireRetryDelay=5 seconds

# The maximum time to wait before a call 
# to getConnection is timed out.
db.default.connectionTimeout=1 second

# Idle max age
db.default.idleMaxAge=10 minute

# This sets the time for a connection to remain idle before sending a test query to the DB. 
# This is useful to prevent a DB from timing out connections on its end. 
db.default.idleConnectionTestPeriod=5 minutes

# An initial SQL statement that is run only when 
# a connection is first created.
db.default.initSQL="SELECT 1"

# If enabled, log SQL statements being executed.
db.default.logStatements=false

# The maximum connection age.
db.default.maxConnectionAge=1 hour

# The maximum query execution time. Queries slower than this will be logged as a warning.
db.default.queryExecuteTimeLimit=1 second

#
# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName=DefaultDS


# JPA configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
jpa.default=defaultPersistenceUnit

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# increase max content length limit for play
# should be more than media.maxSize.file (error handling)
# https://www.playframework.com/documentation/2.4.x/JavaBodyParsers
play.http.parser.maxDiskBuffer=25MB

# Cookie Settings
# ~~~~~
# maxAge is defined in milliseconds (31556952000 = one year)
# sessionTimeout is defined in minutes (important only if 'rememberMe' is unchecked)
play.http.session.maxAge=31556952000
sessionTimeout=10

# Mailer settings
# ~~~~~
# See documentation: https://github.com/playframework/play-mailer
play.mailer {
  host = localhost
  port = 25
  ssl = no
  tls = no
  user = USER
  password = PASSWORD
  debug = no #(defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  mock = yes #(defaults to no, will only log all the email properties instead of sending an email)
}

# General Settings
htwplus.base_url="http://localhost:9000"    # base URL without trailing '/'
htwplus.admin.mail = "admin@htwplus.de"
htwplus.admin.pw = "123456"
htwplus.admin.group = "HTWplus"
htwplus.feedback.group = "HTWplus Feedback"
htwplus.email.sender="HTWplus <noreply@htwplus.de>"
htwplus.dummy.mail = "anonymous@htwplus.de"
htwplus.dummy.pw = "long.passw0rd.no.one.ever.needs"
htwplus.comments.init = 2
htwplus.comments.singlepost = 0
htwplus.post.limit = 10
htwplus.post.editTimeLimit = 10
htwplus.post.editTimeLimitTolerance = 5
htwplus.notification.limit = 10

# Media Settings
media.path="C:/absolute/path"
media.tempPath="C:/absolute/path/tmp"
media.maxSize.file=10
media.fileStore="E:/Dev/Java/htwplus/public/media/filestore"

# Avatar Setting
avatar.maxSize = 3

# LDAP settings
# ~~~~~
ldap.server = "login-dc-01.login.htw-berlin.de"
ldap.port = 389
ldap.startTls = true
ldap.connectionBind = "cn=%USER%,%USER_ROOT%"
ldap.userRoot = "ou=idmusers,dc=login,dc=htw-berlin,dc=de"
ldap.userSearch = "(cn=%USER%)"
ldap.groupRoot = "ou=idmgroups,dc=login,dc=htw-berlin,dc=de"
ldap.groupSearch = "(member=%BIND%)"
ldap.serverValues.studentRole = "GP-STUD"
ldap.serverValues.tutorRole = "GP-LBA"
ldap.serverValues.profRole = "GP-PROF"
#ldap.serverValues.staffRole = "GP-STAFF"
ldap.serverValues.firstName = "givenName"
ldap.serverValues.lastName = "sn"
ldap.serverValues.groupName = "name"

include "elasticsearch.conf"